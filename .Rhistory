con<-dbx::dbxConnect()
library(tidyverse)
library(esaj)
base<-tbl(con,"dados_2018") %>%
filter(subarea=="DIREITO PENAL") %>%
filter(str_detect(assunto,"(?i)estelionato"))
base<-collect(base)
usethis::edit_r_environ()
library(tidyverse)
con<-dbx::dbxConnect()
usethis::edit_r_environ()
conn <-DBI::dbConnect(RPostgres::Postgres(),
dbname="tjsp",
host="localhost",
user = "cide",
password = 'NdnY3m4nUZqF5r')
base<-tbl(conn,"dados_2018") %>%
filter(subarea=="DIREITO PENAL") %>%
filter(str_detect(assunto,"(?i)estelionato")) %>%
collect()
base<-tbl(conn,"dados_2018") %>%
filter(subarea=="DIREITO PENAL") %>%
top_n(1000,id) %>%
collect()
View(base)
base<-tbl(conn,"dados_2018") %>%
filter(subarea=="DIREITO PENAL") %>%
top_n(1000,data_recebimento) %>%
collect()
View(base)
area <- readRDS("~/projetos/tjsp/app/data/area.rds")
assuntos <- readRDS("~/projetos/tjsp/app/data/assuntos.rds")
View(assuntos)
obter_cjsg <- function(livre = NULL,
inicio = NULL,
fim = NULL,
classe = NULL,
assunto = NULL) {
diretorio = tempdir()
tjsp::baixar_cjsg(
livre = livre,
aspas = TRUE,
inicio = inicio,
fim = fim,
diretorio = diretorio
)
df <- tjsp::ler_cjsg(diretorio = diretorio)
unlink(diretorio)
return(df)
}
library(tjsp)
View(obter_cjsg)
usucapiao<-obter_cjsg("usucapião especial")
obter_cjsg
?ler_cjsg
library(readxl)
tpu <- read_excel("~/projetos/17_Tabela_Classes_Justica_Estadual_2_Grau.xls")
View(tpu)
df<-readr::read_table("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt",col_names=F)
View(df)
class(df)
?sum
sum(df$X9)
df<-readr::read_fwf("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt")
?read_fwf
df<-readr::read_table2("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt",col_names=F)
df<-readr::read_table2("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt",col_names=F) %>% tidyr::unite(X1,X2,"alpha")
?unite
df<-readr::read_table2("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt",col_names=F) %>% tidyr::unite("x",X1,X2)
df<-readr::read_table2("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt",col_names=F) %>% tidyr::unite("X1",X1,X2,sep=" ")
df<-readr::read_table2("https://raw.githubusercontent.com/Patricklv/Importing-.txt-file/master/Sample.txt",col_names=F) %>% tidyr::unite("x",X1,X2)
library(shiny)
?updateTextInput()
source('~/.active-rstudio-document')
if (interactive()) {
ui <- fluidPage(
sliderInput("controller", "Controller", 0, 20, 10),
textInput("inText", "Input text"),
textInput("inText2", "Input text 2")
)
server <- function(input, output, session) {
observe({
# We'll use the input$controller variable multiple times, so save it as x
# for convenience.
x <- input$controller
# This will change the value of input$inText, based on x
updateTextInput(session, "inText", value = paste("New text", x))
# Can also set the label, this time for input$inText2
updateTextInput(session, "inText2",
label = paste("New label", x),
value = paste("New text", x))
})
}
shinyApp(ui, server)
}
setwd("~/projetos/curso_jurimetria")
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
tjsp::ler_cjsg(diretorio)
}
df<-extrair_cjsg("alienação parental")
View(df)
df<-purrr::modify_dfr(df,iconv(~.x,"UTF-8","latin1//TRANSLIT"))
df<-purrr::modify(df,iconv(~.x,"UTF-8","latin1//TRANSLIT"))
df<-purrr::modify(df,~iconv(.x,"UTF-8","latin1//TRANSLIT"))
View(df)
extrair_cjsg
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
View(df)
?mutate_at
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
df<- tjsp::ler_cjsg(diretorio)
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
df<- purrr::mutate_at(df,dplyr::vars(data_julgamento,data_publicacao,relator,comarca),list(~stringr::str_remove(.,".+:?")))
return(df)
}
df<-extrair_cjsg("alienação parental")
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
df<- tjsp::ler_cjsg(diretorio)
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
df<- dplyr::mutate_at(df,dplyr::vars(data_julgamento,data_publicacao,relator,comarca),list(~stringr::str_remove(.,".+:?")))
return(df)
}
df<-extrair_cjsg("alienação parental")
View(df)
df<-mutate_at(df,dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy))
df<-mutate_at(df,dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy(.)))
View(df)
install.packages("writexl")
writexl::write_xlsx(df,"cjsg/alieanacao_parental.xlsx")
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
df<- tjsp::ler_cjsg(diretorio)
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
df<- dplyr::mutate_at(df,dplyr::vars(data_julgamento,data_publicacao,relator,comarca,orgao_julgador),
list(~stringr::str_remove(.,".+:?"))) %>%
mutate_at(dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy(.)))
return(df)
}
df<-extrair_cjsg("alienação parental")
View(df)
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
df<- tjsp::ler_cjsg(diretorio)
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
df<- dplyr::mutate_at(df,dplyr::vars(data_julgamento,data_publicacao,relator,comarca,orgao_julgador),
list(~stringr::str_remove(.,".+:?"))) %>%
dplyr::mutate_all(stringr::str_squish) %>%
dplyr::mutate_at(dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy(.)))
return(df)
}
df<- df %>%  dplyr::mutate_all(stringr::str_squish) %>%
dplyr::mutate_at(dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy(.)))
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
df<- tjsp::ler_cjsg(diretorio)
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
df<- dplyr::mutate_at(df,dplyr::vars(data_julgamento,data_publicacao,relator,comarca,orgao_julgador),
list(~stringr::str_remove(.,".+:?"))) %>%
dplyr::mutate_all(stringr::str_squish) %>%
dplyr::mutate_at(dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy(.)))
return(df)
}
df<-extrair_cjsg("alienação parental")
View(df)
writexl::write_xlsx(df,"cjsg/alienacao_parental.xlsx")
baixar_acordaos(df$processo,"cjsg/acordaos")
baixar_acordaos
d<-baixar_acordaos(df$processo[1],"cjsg")
View(d)
runApp('/srv/shiny-server/formulario')
runApp('/srv/shiny-server/formulario')
?textAreaInput
dateRangeInput
shiny:::shinyInputLabel
library(DT)
?rrenderDT
?renderDT
?tribble
?tribble
?numericInput
runApp('/srv/shiny-server/formulario')
runApp('/srv/shiny-server/formulario')
runApp('/srv/shiny-server/formulario')
runApp('/srv/shiny-server/formulario')
?selectInput()
runApp('/srv/shiny-server/formulario')
runApp('/srv/shiny-server/formulario')
k<- esaj::download_cposg(df$processo[1],"cposg")
k
extrair_cjsg<-function(livre){
diretorio<-tempdir()
tjsp::baixar_cjsg(livre,aspas=TRUE,diretorio=diretorio)
df<- tjsp::ler_cjsg(diretorio)
df[-9]<-purrr::modify(df[-9],~iconv(.x,"UTF-8","latin1//TRANSLIT"))
df<- dplyr::mutate_at(df,dplyr::vars(data_julgamento,data_publicacao,relator,comarca,orgao_julgador),
list(~stringr::str_remove(.,".+:?"))) %>%
dplyr::mutate_all(stringr::str_squish) %>%
dplyr::mutate_at(dplyr::vars(data_julgamento,data_publicacao),list(~lubridate::dmy(.)))
return(df)
}
?install.packages("quanteda",)
install.packages("quanteda",Ncpus=3)
setwd("~/projetos/curso_jurimetria/cjsg")
library(tjsp)
s<-list.files("acordaos")
library(quanteda)
install.packages("readtext")
library(readtext)
?readtext
s<-list.files("acordaos",full.names = T)
acordaos_alienacao<-readtext(s)
?kwic
corpo<-corpus(acordaos_alienacao)
vd<-kwic(corpo,"doméstica",window=20,case_insensitive = TRUE)
View(vd)
vd<-kwic(corpo,"(dom.stica|penha)",window=20,case_insensitive = TRUE,valuetype="regex")
View(vd)
vd<-kwic(corpo,"(dom[ée]stica|\\bpenha)",window=20,case_insensitive = TRUE,valuetype="regex")
View(vd)
setwd("~/projetos/teste")
baixar_acordaos("10131005020178260053")
install.packages("pak")
pak::pak_setup()
?pak::pak_setup()
pak::pkg_install("yihui/xaringan")
install.packages("leaflet")
install.packages(c("ggplot2", "RSpectra", "servr", "snakecase", "visNetwork"))
devtools::install_github("rstudio/shiny")
setwd("~/projetos/curso_jurimetria")
pak::pkg_install("jjesusfilho/tjsp")
library(tjsp)
dados<-ler_dados_cposg("cposg")
decisoes<-ler_decisoes("cposg")
decisoes<-ler_decisoes_cposg("cposg")
partes<-ler_partes("cpopsg")
partes<-ler_partes("cposg")
acordaos<-ler_acordaos("cjsg/acordaos",remover_assinatura = TRUE)
ler_acordaos
ler_acordaos<-function (diretorio = ".", remover_assinatura = FALSE, combinar = FALSE)
{
pdfs <- list.files(diretorio, pattern = ".pdf$", full.names = TRUE)
textos <- purrr::map(pdfs, pdftools::pdf_text)
if (remover_assinatura == TRUE) {
textos <- purrr::map(textos, remover_assinatura)
}
if (combinar == TRUE) {
textos <- purrr::map(textos, ~stringr::str_c(.x, collapse = "\n"))
}
return(texto)
}
ler_acordaos<-function (diretorio = ".", remover_assinatura = FALSE, combinar = FALSE)
{
pdfs <- list.files(diretorio, pattern = ".pdf$", full.names = TRUE)
textos <- purrr::map(pdfs, pdftools::pdf_text)
if (remover_assinatura == TRUE) {
textos <- purrr::map(textos, remover_assinatura)
}
if (combinar == TRUE) {
textos <- purrr::map(textos, ~stringr::str_c(.x, collapse = "\n"))
}
return(textos)
}
acordaos<-ler_acordaos("cjsg/acordaos",remover_assinatura = TRUE)
tjsp::remover_assinatura
diretorio<-"/cjsg/acordaos"
pdfs <- list.files(diretorio, pattern = ".pdf$", full.names = TRUE)
diretorio<-"cjsg/acordaos"
pdfs <- list.files(diretorio, pattern = ".pdf$", full.names = TRUE)
textos <- purrr::map(pdfs, pdftools::pdf_text)
if (remover_assinatura == TRUE) {
textos <- purrr::map(textos, remover_assinatura)
}
remover_assinatura <- TRUE
if (remover_assinatura == TRUE) {
textos <- purrr::map(textos, remover_assinatura)
}
s<-is.na(textos)
table(s)
textos <- purrr::map(textos, remover_assinatura)
ler_acordaos<-function (diretorio = ".", remover_assinatura = FALSE, combinar = FALSE)
{
pdfs <- list.files(diretorio, pattern = ".pdf$", full.names = TRUE)
textos <- purrr::map(pdfs, pdftools::pdf_text)
if (remover_assinatura == TRUE) {
textos <- purrr::map(textos, ~remover_assinatura(.x))
}
if (combinar == TRUE) {
textos <- purrr::map(textos, ~stringr::str_c(.x, collapse = "\n"))
}
return(textos)
}
acordaos<-ler_acordaos("cjsg/acordaos",remover_assinatura = TRUE)
writexl::write_xlsx(acordaos,"cjsg/acordaos.xlsx")
acordaos<-ler_acordaos("cjsg/acordaos",remover_assinatura = TRUE,combine=TRUE)
acordaos<-ler_acordaos("cjsg/acordaos",remover_assinatura = TRUE,TRUE)
acordaos<-unlist(acordaos)
processos<-stringr::str_extract(pdfs,"\\d{7,}")
acordaos<-tibble(processos,texto=acordaos)
acordaos<-tibble::tibble(processos,texto=acordaos)
writexl::write_xlsx(acordaos,"cjsg/acordaos.xlsx")
readr::write_delim(acordaos,"acordaos.txt","\t")
writexl::write_xlsx(dados,"cposg/dados.xlsx")
writexl::write_xlsx(partes,"cposg/partes.xlsx")
writexl::write_xlsx(decisoes,"cposg/decisoes.xlsx")
andamentos<-ler_movimentacao_cposg("cposg/html")
ler_movimentacao_cposg
ler_andamentos<-function (diretorio = ".")
{
arquivos <- list.files(path = diretorio, pattern = ".html",
full.names = TRUE)
purrr::map2_dfr(arquivos, processo, purrr::possibly(~{
texto <- xml2::read_html(.x) %>% xml2::xml_find_first(xpath = "//table/tbody[@id='tabelaTodasMovimentacoes']")
data <- xml2::xml_find_all(texto, ".//td[@width='120']") %>%
xml2::xml_text(trim = TRUE)
mov <- xml2::xml_find_all(texto, ".//td[@style='vertical-align: top; padding-bottom: 5px']") %>%
xml2::xml_text(trim = TRUE)
tibble::tibble(processo = .y, data = data, movimentacao = mov)
}, otherwise = NULL))
}
andamentos<-ler_movimentacao_cposg("cposg/html")
ler_andamentos<-function (diretorio = ".")
{
arquivos <- list.files(path = diretorio, pattern = ".html",
full.names = TRUE)
processo <- stringr::str_extract(arquivos, "\\d{20}") %>%
abjutils::build_id()
purrr::map2_dfr(arquivos, processo, purrr::possibly(~{
texto <- xml2::read_html(.x) %>% xml2::xml_find_first(xpath = "//table/tbody[@id='tabelaTodasMovimentacoes']")
data <- xml2::xml_find_all(texto, ".//td[@width='120']") %>%
xml2::xml_text(trim = TRUE)
mov <- xml2::xml_find_all(texto, ".//td[@style='vertical-align: top; padding-bottom: 5px']") %>%
xml2::xml_text(trim = TRUE)
tibble::tibble(processo = .y, data = data, movimentacao = mov)
}, otherwise = NULL))
}
andamentos<-ler_movimentacao_cposg("cposg/html")
ler_andamentos<-function (diretorio = ".")
{
arquivos <- list.files(path = diretorio, pattern = ".html",
full.names = TRUE)
processo <- stringr::str_extract(arquivos, "\\d{20}") %>%
abjutils::build_id()
purrr::map2_dfr(arquivos, processo, purrr::possibly(~{
texto <- xml2::read_html(.x) %>% xml2::xml_find_first(xpath = "//table/tbody[@id='tabelaTodasMovimentacoes']")
data <- xml2::xml_find_all(texto, ".//td[@width='120']") %>%
xml2::xml_text(trim = TRUE)
mov <- xml2::xml_find_all(texto, ".//td[@style='vertical-align: top; padding-bottom: 5px']") %>%
xml2::xml_text(trim = TRUE)
tibble::tibble(processo = .y, data = data, movimentacao = mov)
}, otherwise = NULL))
}
ler_andamentos_cposg<-function (diretorio = ".")
{
arquivos <- list.files(path = diretorio, pattern = ".html",
full.names = TRUE)
processo <- stringr::str_extract(arquivos, "\\d{20}") %>%
abjutils::build_id()
purrr::map2_dfr(arquivos, processo, purrr::possibly(~{
texto <- xml2::read_html(.x) %>% xml2::xml_find_first(xpath = "//table/tbody[@id='tabelaTodasMovimentacoes']")
data <- xml2::xml_find_all(texto, ".//td[@width='120']") %>%
xml2::xml_text(trim = TRUE)
mov <- xml2::xml_find_all(texto, ".//td[@style='vertical-align: top; padding-bottom: 5px']") %>%
xml2::xml_text(trim = TRUE)
tibble::tibble(processo = .y, data = data, movimentacao = mov)
}, otherwise = NULL))
}
andamentos<-ler_movimentacao_cposg("cposg/html")
ler_movimentacao_cposg<-function (diretorio = ".")
{
arquivos <- list.files(path = diretorio, pattern = ".html",
full.names = TRUE)
processo <- stringr::str_extract(arquivos, "\\d{20}") %>%
abjutils::build_id()
purrr::map2_dfr(arquivos, processo, purrr::possibly(~{
texto <- xml2::read_html(.x) %>% xml2::xml_find_first(xpath = "//table/tbody[@id='tabelaTodasMovimentacoes']")
data <- xml2::xml_find_all(texto, ".//td[@width='120']") %>%
xml2::xml_text(trim = TRUE)
mov <- xml2::xml_find_all(texto, ".//td[@style='vertical-align: top; padding-bottom: 5px']") %>%
xml2::xml_text(trim = TRUE)
tibble::tibble(processo = .y, data = data, movimentacao = mov)
}, otherwise = NULL))
}
andamentos<-ler_movimentacao_cposg("cposg/html")
writexl::write_xlsx(movimentacoes,"cposg/movimentacoes.xlsx")
writexl::write_xlsx(andamentos,"cposg/movimentacoes.xlsx")
